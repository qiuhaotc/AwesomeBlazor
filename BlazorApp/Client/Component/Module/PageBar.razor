@using BlazorApp.Shared

@if (PageInfo.PageCount > PageInfo.PageSize)
{
    <button type="button" class="btn btn-light btn-sm" @onclick="(() => NaviTo(1))">@("<<")</button>
}

@for (int i = PageInfo.LeftStartPage; i <= PageInfo.RightEndPage; i++)
{
    int page = i;
    var buttonClass = "";
    if (i == PageInfo.CurrentPage)
    {
        buttonClass = "disabled";
    }
    <button type="button" class="btn btn-light @buttonClass btn-sm" @onclick="(() => NaviTo(page))">@GetFixedNumber(i, PageInfo.PageCount)</button>
}

@if (PageInfo.PageCount > PageInfo.PageSize)
{
    <button type="button" class="btn btn-light btn-sm" @onclick="(() => NaviTo(PageInfo.PageCount))">@(">>")</button>
}

@{
    Console.WriteLine(PageInfo.ToString());
}

@code {
    [Parameter]
    public PageInfo PageInfo { get; set; }

    void NaviTo(int toPage)
    {
        if (toPage != PageInfo.CurrentPage)
        {
            PageInfo.NaviToPage?.Invoke(toPage);
            PageInfo.CurrentPage = toPage;
        }
    }

    string GetFixedNumber(int page, int totalPage)
    {
        return page.ToString().PadLeft(totalPage.ToString().Length, '0');
    }
}
